{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Container/Container.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","resetName","resetNumber","className","s","form","event","preventDefault","label","input","type","value","placeholder","onChange","currentTarget","pattern","btn","ContactList","contacts","onDeleteContact","list","map","id","item","button","onClick","Filter","filter","Container","children","container","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","setFilter","shortid","generate","includeName","reduce","acc","contact","includeNumber","includes","alert","normalizedFilter","toLowerCase","getVisibleContacts","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d48832b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__VnuSt\",\"input\":\"Filter_input__1qliE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1_-La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2DiCB\",\"label\":\"ContactForm_label__3F7Sb\",\"input\":\"ContactForm_input__33gmJ\",\"btn\":\"ContactForm_btn__2e40N\"};","import React, { useState } from 'react';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeName = event => {\n    setName(event.currentTarget.value);\n  };\n\n  const handleChangeNumber = event => {\n    setNumber(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit(name, number);\n    resetName();\n    resetNumber();\n  };\n\n  const resetName = () => {\n    setName('');\n  };\n\n  const resetNumber = () => {\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Eden Clements\"\n          onChange={handleChangeName}\n          // required\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"000-00-00\"\n          onChange={handleChangeNumber}\n          pattern=\"[0-7]{3}-[0-7]{2}-[0-7]{2}\"\n          // required\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import s from './ContactList.module.css';\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ name, number, id }) => (\n        <li key={id} className={s.item}>\n          {name}: {number}\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import s from './Filter.module.css';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <>\n      <label className={s.filter}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </>\n  );\n}\n","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import React, { useState, useEffect } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport Container from './components/Container/Container';\nimport './App.css';\n\nfunction useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n\nexport default function App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n\n  const [filter, setFilter] = useState('');\n\n  const addContact = (name, number) => {\n    const item = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const includeName = contacts.reduce(\n      (acc, contact) => [...acc, contact.name],\n      [],\n    );\n    const includeNumber = contacts.reduce(\n      (acc, contact) => [...acc, contact.number],\n      [],\n    );\n\n    if (name === '' || number === '') {\n      alert('Please enter all fields!');\n      return;\n    }\n\n    if (includeName.includes(name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    } else if (includeNumber.includes(number)) {\n      alert(`${number} is already in contacts`);\n    } else {\n      setContacts(contacts => [item, ...contacts]);\n    }\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevState =>\n      prevState.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  const changeFilter = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  return (\n    <Container>\n      <h1 className=\"phonebook\">Phonebook</h1>\n      <ContactForm contacts={contacts} onSubmit={addContact} />\n\n      <h2 className=\"contacts\">Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList\n        contacts={getVisibleContacts()}\n        onDeleteContact={deleteContact}\n      />\n    </Container>\n  );\n}\n\n// class oldApp extends Component {\n// state = {\n//   contacts: [\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//   ],\n//   filter: '',\n//   name: '',\n//   number: '',\n// };\n\n//   componentDidMount() {\n//     const contact = localStorage.getItem('contacts');\n//     const parsedContact = JSON.parse(contact);\n\n//     if (parsedContact) {\n//       this.setState({ contacts: parsedContact });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const contact = JSON.stringify(this.state.contacts);\n//     if (contact !== prevState.contacts) {\n//       localStorage.setItem('contacts', contact);\n//     }\n//   }\n\n//   addContact = (name, number) => {\n//     const item = {\n//       id: shortid.generate(),\n//       name,\n//       number,\n//     };\n\n//     const includeName = this.state.contacts.reduce(\n//       (acc, contact) => [...acc, contact.name],\n//       [],\n//     );\n//     const includeNumber = this.state.contacts.reduce(\n//       (acc, contact) => [...acc, contact.number],\n//       [],\n//     );\n\n//     if (name === '' || number === '') {\n//       alert('Please enter all fields!');\n//       return;\n//     }\n\n//     if (includeName.includes(name)) {\n//       alert(`${name} is already in contacts`);\n//       return;\n//     } else if (includeNumber.includes(number)) {\n//       alert(`${number} is already in contacts`);\n//     } else {\n//       this.setState(({ contacts }) => ({\n//         contacts: [item, ...contacts],\n//       }));\n//     }\n//   };\n\n//   changeFilter = event => {\n//     this.setState({ filter: event.currentTarget.value });\n//   };\n\n//   getVisibleContacts = () => {\n//     const { filter, contacts } = this.state;\n//     const normalizedFilter = filter.toLowerCase();\n\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normalizedFilter),\n//     );\n//   };\n\n//   deleteContact = contactId => {\n//     this.setState(prevState => ({\n//       contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n//     }));\n//   };\n\n//   render() {\n//     const { contacts, filter } = this.state;\n//     const visibleContacts = this.getVisibleContacts();\n\n//     return (\n//       <Container>\n//         <h1 className=\"phonebook\">Phonebook</h1>\n//         <ContactForm contacts={contacts} onSubmit={this.addContact} />\n\n//         <h2 className=\"contacts\">Contacts</h2>\n//         <Filter value={filter} onChange={this.changeFilter} />\n//         <ContactList\n//           contacts={visibleContacts}\n//           onDeleteContact={this.deleteContact}\n//         />\n//       </Container>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2aRFb\",\"item\":\"ContactList_item__3nRds\",\"button\":\"ContactList_button__WYB2L\"};"],"sourceRoot":""}